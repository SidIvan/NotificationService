// Code generated by MockGen. DO NOT EDIT.
// Source: NotificationService/internal/repo (interfaces: DistributionRepoInterface)

// Package repo is a generated GoMock package.
package repo

import (
	dto "NotificationService/internal/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDistributionRepoInterface is a mock of DistributionRepoInterface interface.
type MockDistributionRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDistributionRepoInterfaceMockRecorder
}

// MockDistributionRepoInterfaceMockRecorder is the mock recorder for MockDistributionRepoInterface.
type MockDistributionRepoInterfaceMockRecorder struct {
	mock *MockDistributionRepoInterface
}

// NewMockDistributionRepoInterface creates a new mock instance.
func NewMockDistributionRepoInterface(ctrl *gomock.Controller) *MockDistributionRepoInterface {
	mock := &MockDistributionRepoInterface{ctrl: ctrl}
	mock.recorder = &MockDistributionRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDistributionRepoInterface) EXPECT() *MockDistributionRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateDistribution mocks base method.
func (m *MockDistributionRepoInterface) CreateDistribution(arg0 *dto.Distribution) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDistribution", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// CreateDistribution indicates an expected call of CreateDistribution.
func (mr *MockDistributionRepoInterfaceMockRecorder) CreateDistribution(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDistribution", reflect.TypeOf((*MockDistributionRepoInterface)(nil).CreateDistribution), arg0)
}

// DeleteDistribution mocks base method.
func (m *MockDistributionRepoInterface) DeleteDistribution(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteDistribution", arg0)
}

// DeleteDistribution indicates an expected call of DeleteDistribution.
func (mr *MockDistributionRepoInterfaceMockRecorder) DeleteDistribution(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDistribution", reflect.TypeOf((*MockDistributionRepoInterface)(nil).DeleteDistribution), arg0)
}

// FindAllDistributions mocks base method.
func (m *MockDistributionRepoInterface) FindAllDistributions() *[]dto.DistributionWithId {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindAllDistributions")
	ret0, _ := ret[0].(*[]dto.DistributionWithId)
	return ret0
}

// FindAllDistributions indicates an expected call of FindAllDistributions.
func (mr *MockDistributionRepoInterfaceMockRecorder) FindAllDistributions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindAllDistributions", reflect.TypeOf((*MockDistributionRepoInterface)(nil).FindAllDistributions))
}

// FindDistributionById mocks base method.
func (m *MockDistributionRepoInterface) FindDistributionById(arg0 string) *dto.DistributionWithId {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindDistributionById", arg0)
	ret0, _ := ret[0].(*dto.DistributionWithId)
	return ret0
}

// FindDistributionById indicates an expected call of FindDistributionById.
func (mr *MockDistributionRepoInterfaceMockRecorder) FindDistributionById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindDistributionById", reflect.TypeOf((*MockDistributionRepoInterface)(nil).FindDistributionById), arg0)
}

// IsDistributionExist mocks base method.
func (m *MockDistributionRepoInterface) IsDistributionExist(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsDistributionExist", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsDistributionExist indicates an expected call of IsDistributionExist.
func (mr *MockDistributionRepoInterfaceMockRecorder) IsDistributionExist(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsDistributionExist", reflect.TypeOf((*MockDistributionRepoInterface)(nil).IsDistributionExist), arg0)
}

// UpdateDistribution mocks base method.
func (m *MockDistributionRepoInterface) UpdateDistribution(arg0 string, arg1 *dto.Distribution) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateDistribution", arg0, arg1)
}

// UpdateDistribution indicates an expected call of UpdateDistribution.
func (mr *MockDistributionRepoInterfaceMockRecorder) UpdateDistribution(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDistribution", reflect.TypeOf((*MockDistributionRepoInterface)(nil).UpdateDistribution), arg0, arg1)
}
